prototype(Stoj.Site:Templates.VideoTextProject) < prototype(Neos.Neos:ContentComponent) {

    label = Neos.Neos:Editable {
        property = 'label'
    }

    link = ${q(node).property('link')}

    vimeoID = Neos.Neos:Editable {
        property = 'id'
    }

    renderAsVideo = ${site.context.inBackend ? false : true}

    dummyImage = Neos.Fusion:ResourceUri {
    path = 'resource://Stoj.Site/Public/Frontend/assets/VideoDummy.jpg'
    }

    hasCaption = ${q(node).property('hasCaption')}
    caption = Neos.Neos:Editable {
        property = 'caption'
    }

    float = ${q(node).property('float')}

    src = Neos.Fusion:Case {
        image {
            condition = ${q(node).property('image') ? true : false}
            renderer = Sitegeist.Kaleidoscope:AssetImageSource {
                asset = ${q(node).property('image')}
            }
        }
        dummyImage {
            condition = ${site.context.inBackend}
            renderer = Sitegeist.Kaleidoscope:DummyImageSource
        }
    }

    play = Neos.Fusion:ResourceUri {
        path = 'resource://Stoj.Site/Public/Frontend/svg/play.svg'
    }

    autoPlay = ${q(node).property('autoPlay') ? 'vimeo-video' : ''}

    renderer = afx`
        <div class="video-frame-project video-is-paused">
            <iframe
                id={props.autoPlay}
                src={props.vimeoID}
                frameborder="0"
                allow="autoplay; fullscreen"
                allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;"
                @if.render={props.renderAsVideo}
                >
            </iframe>
            <img
                src={props.src} id="video-thumb" alt=""
                style="position:absolute;top:0;left:0;width:100%;height:100%;object-fit:cover;"
            />
            <!--<img class="video-symbol" src={props.play} alt="play symbol" />-->
        </div>
        <figcaption @if.has={props.hasCaption && props.caption}>
            {props.caption}
        </figcaption>
    `
}
